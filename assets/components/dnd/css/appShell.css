@import url('https://fonts.googleapis.com/css?family=Spectral+SC|Vollkorn+SC');
@font-face {
	font-family: Iokharic;
	src: url(../fonts/roboto.ttf);
}

@font-face {
	font-family: Vollkorn SC;
	src: url(../fonts/roboto.ttf);
}

@font-face {
	font-family: Spectral SC;
	src: url(../fonts/roboto.ttf);
}

@font-face {
	font-family: museo;
	src: url(../../../css/fonts/Museo500.otf);
}

@font-face {
	font-family: Alexana;
	src: url(../fonts/Alexana.ttf);
}

h1, p, a {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	margin: 0;
}

h1 {
	font-size: 2em;
	font-weight: 100;
}

html, body {
	padding: 0;
	margin: 0;
	overflow: hidden;
}

h1, h2, textarea {
	margin: 0;
	padding: 0;
	font-family: "Spectral SC";
}

p {
	font-family: "Vollkorn SC";
}

.action {
	background-color: #aa00ff;
}

 button {
	transition: .1s all ease-in;
	font-size: 1.5rem;
	color: #00B6C9;
	border: none;
	background-color: white;
	cursor: pointer;
	border-radius: 3px;
	outline: 0;
}

button:hover {
	transition: .1s all ease-in;
	background-color: #eaeaea;
}

button i {
	font-size: inherit;
	transform: translate(0%, 12%);
}

input, select {
	border: none;
	font-size: 1.2rem;
	font-family: "Vollkorn SC";
	background-color: #eaeaea;
	border-radius: 3px;
	outline: 0;
}

button.blue {
	background-color: #4c90ff;
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
	color: white;
	padding-left: 10px;
	padding-right: 10px;
	padding-top: 5px;
	padding-bottom: 5px;
}

button.blue:hover {
	background-color: #8cb6f9;
}

button.red {
	background-color: #f21d1d;
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
	color: white;
	padding-left: 10px;
	padding-right: 10px;
	padding-top: 5px;
	padding-bottom: 5px;
}

button.red:hover {
	background-color: #f96161;
}

.s1 {
	box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}

.s1.hover {
	transition: all 0.3s cubic-bezier(.25,.8,.25,1);
}

.s1.hover:hover {
	box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}

.s2 {
	box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
}

.s3 {
	box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
}

.s4 {
	box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}

.s5 {
	box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
}

.rounded {
	border-radius: 1vh;
}

.roundedTop {
	border-top-left-radius: 1vh;
	border-top-right-radius: 1vh;
}

.push {
	margin-bottom: 5vh;
}

.center {
	position: relative !important;
    top: 50% !important;
    left: 50% !important;
	transform: translate(-50%, -50%) !important;
}

.centerHorizontal {
	position: relative;
    left: 50%;
	transform: translate(-50%, 0%);
}

.centerVertical {
	position: relative;
    top: 50%;
	transform: translate(0%, -50%);
}

.shadow {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.h1 {
	width: 100%;
	height: 30%;
}

.h1 h1 {
	width: 99%;
	text-align: center;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.h2 {
	width: 100%;
	height: 20%;
}

.h2 h2 {
	width: 99%;
	text-align: center;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.button {
	display: block;
	cursor: pointer;
	width: 100%;
	height: 15vh;
}

.button:hover {
	background-color: rgb(235,235,235);
}

.button h1 {
	text-align: center;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
}

.fab {
	width: 4.5vw;
    height: 4.5vw;
    position: fixed;
    top: 101vh;
    left: calc(97vw - 4.5vw);
	border-radius: 50%;
	color: white;
	z-index: 10;
	box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
	cursor: pointer;
	transition: all cubic-bezier(0.4, 0.0, 1, 1) 100ms;
}

.fab.show {
	top: calc(96vh - 4.5vw);
	transition: all cubic-bezier(0.0, 0.0, 0.2, 1) 250ms;
}

.fab .i {
	position: relative;
	text-align: center;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	font-size: 3em;
}

.fab:hover {
	transform: scale(1.05);
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 150ms;
}

.fab:hover .i {
	animation: pop cubic-bezier(0.4, 0.0, 0.2, 1) 300ms;
}

@keyframes pop {
	0% {
		transform: translate(-50%, -50%) scale(1);
	}
	50% {
		transform: translate(-50%, -50%) scale(1.2);
	}
	100% {
		transform: translate(-50%, -50%) scale(1);
	}
}

.loader-background {
	position: fixed;
	z-index: 1000;
	width: 100vw;
	height: 100vh;
	background-color: rgba(235, 235, 235, .5);
}

.loader {
	z-index: 1001;
	width: 50vw;
	height: 1px;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	animation: loader infinite cubic-bezier(0.4, 0.0, 0.2, 1) 1.4s;
	background-color: white;
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
	background-color: #2a2a72;
	background-image: linear-gradient(-90deg, #2a2a72 0%, #009ffd 74%);
}

@keyframes loader {
	0% {
		width: 1px;
		height: 1px;
	}
	25% {
		width: 100vw;
		height: 1px;
	}
	50% {
		width: 1px;
		height: 1px;
	}
	75% {
		width: 1px;
		height: 100vh;
	}
	100% {
		width: 1px;
		height: 1px;
	}
}

.right {
	float: right;
}

.left {
	float: left;
}

.progressBar {
	width: 100vw;
	height: 2px;
	background-color: rgb(235, 235, 235);
}

.progressBar .animation {
	background-color: #2a2a72;
	background-image: linear-gradient(-90deg, #2a2a72 0%, #009ffd 74%);
	width: 0;
	height: 100%;
	position: relative;
}

.progressBar.active .animation {
	animation: progressBar 2s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
}

@keyframes progressBar {
	0% {
		width: 0%;
		left: 0;
	}
	50% {
		width: 50%;
		left: 25vw;
	}
	100% {
		width: 0%;
		left: 100vw;
	}
}

.menuFloater {
	position: fixed;
	height: 6vh;
	width: 6vh;
	z-index: 28;
	background-color: transparent;
}

.menuFloater img {
	cursor: pointer;
	width: 90%;
}

.userFloater {
	position: fixed;
	z-index: 25;
	height: 6vh;
	background-color: red;
    width: 40vw;
    left: 58vw;
    background-color: transparent;
}

.userFloater h1 {
	margin-left: 1%;
	margin-right: 1%;
	font-weight: 100;
}

.userFloater img {
	height: 5.5vh;
	width: 5.5vh;
	border-radius: 50%;
	border: 1px solid rgb(235, 235, 235);
}

.pages {
	height: 100vh;
	width: 100vw;
}

.page {
	width: 100vw;
	height: 100vh;
	display: none;
}

.page.open {
	display: block;
}

.innerPage {
	width: 100%;
	height: 100%;
}

.innerPage.scroll {
    overflow-y: scroll;
}

.boxer {
	width: 70%;
	height: 70%;
	border-radius: 1vh;
	background-color: #0cbaba;
	background-image: linear-gradient(315deg, #0cbaba 0%, #380036 74%);
	color: white;
}

.boxer .text {
	width: 100%;
	height: 100%;
	float: left;
}

.boxer .text .title {
	height: 20%;
	width: 100%;
	position: relative;
	top: 5vh;
}

.boxer .text .title h1 {
	font-size: 3.5em;
    position: relative;
    left: 1%;
}

.boxer .text .content {
	width: 30%;
	height: 80%;
}

.boxer .text .content p {
	width: 90%;
	height: 90%;
	white-space: initial;
	font-size: 1.5em;
}

.sidebar {
	position: fixed;
	z-index: 30;
	width: 20vw;
	height: 100vh;
	background-color: white;
	transition: 200ms all cubic-bezier(0.4, 0.0, 0.6, 1);
	left: -21vw;
}

.sidebar.open {
	left: 0vw;
	transition: 250ms all cubic-bezier(0.0, 0.0, 0.2, 1);
}

.sidebar .userWrapper {
	width: 100%;
	height: 15%;
	position: relative;
	top: 5%;
}

.sidebar .userWrapper .userCard {
	width: 90%;
	height: 90%;
	border-radius: 1vh;
	background-color: #36096d;
	background-image: linear-gradient(315deg, #36096d 0%, #37d5d6 74%);
}

.sidebar .iconWrapper {
	height: 100%;
	width: 30%;
	float: left;
}

.sidebar .iconWrapper img {
    height: 60%;
    border-radius: 50%;
}

.sidebar .nameWrapper {
	width: 70%;
	height: 100%;
	float: left;
}

.sidebar .nameWrapper h1 {
	width: 98%;
	color: white;
	font-weight: 100;
}

.sidebar .menu {
	height: 85%;
    width: 100%;
    position: relative;
    top: 10%;
}

.sidebar .menubutton {
	width: 100%;
	height: 7%;
	background-color: white;
	cursor: pointer;
}

.sidebar .menubutton p {
	color: #505050;
	width: 70%;
	position: relative;
	left: 10%;
	font-size: 1.4em;
}

.sidebar .menubutton p i {
	font-size: inherit;
	transform: translate(0%, 13%);
    margin-right: 5%;
}

.sidebar .menubutton:hover {
	background-color: rgb(235, 235, 235);
}

.divider {
	width: 100%;
	height: 1px;
	margin-top: 1%;
	margin-bottom: 1%;
}

.divider .dividerInner {
	width: 90%;
	height: 100%;
	background-color: rgb(235, 235, 235);
}

.sidebarBackground {
	transition: 150ms all cubic-bezier(0.4, 0.0, 0.6, 1);
	position: fixed;
	z-index: 10;
	width: 0vw;
	height: 100vh;
	background-color: rgba(235, 235, 235, .5);
}

.sidebarBackground.open {
	width: 100vw;
	transition: 200ms all cubic-bezier(0.0, 0.0, 0.2, 1);
}

.sidebarBackground .sidebarExit {
	width: 80%;
	height: 100%;
	position: relative;
	left: 20%;
}

.error-background {
	display: none;
	display: none;
	position: fixed;
	margin: 0;
	padding: 0;
	z-index: 90;
	width: 100vw;
	height: 100vh;
	background-color: rgba(255,0,0,.5);
}

.error-forground {
	color: white;
	width: 60%;
	height: 60%;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
}

.error-forground h1 {
	width: 90%;
	text-align: left;
	margin-left: 10%;
	font-size: 5em;
}

.error-forground p {
	width: 90%;
	text-align: left;
	margin-left: 10%;
	font-size: 2em;
	white-space: normal;
}

.error-forground #error {
	color: white;
	width: 90%;
	text-align: left;
	margin-left: 10%;
	font-size: 1em;
}

.error-forground button {
	position: relative;
	width: 80%;
	height: 10%;
	left: 10%;
}

/*
    TODO
    - Create a universal background for overlays
    - Create a universal forground for overlays
    - Create a function that returns a ncp object in a function
    - Create a Quick npc button
    _ Create a Load npc button
        - The npc's will be saved on the DM's account
        - Npc's can be created outside the party
    - Create a Spesific npc button that has some parms to use like race, class and other stuff.
*/

.overlay-background {
    display: none;
    background-color: rgba(0,0,0,0.5);
    z-index: 80;
    position: fixed;
    width: 100vw;
    height: 100vh;
}

.overlay {
    display: none;
    position: fixed;
    width: 80vw;
    height: 90vh;
    z-index: 1001;
    background-color: white;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.overlay .content {
    overflow: hidden;
    width: 100%;
    height: 90%;
}

.overlay .closeButton {
    cursor: pointer;
    width: 100%;
    height: 10%;
}

.overlay .closeButton:hover {
    background-color: rgb(235,235,235);
}

.overlay .closeButton h1 {
    width: 100%;
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    text-align: center;
}

/* Note styling */

.note {
	z-index: 2000;
	top: -9vh;
	position: fixed;
	height: 7vh;
	width: 60vw;
	left: 20vw;
	/* border-radius: 5vh; */
	background-color: white;
	transition: 150ms all cubic-bezier(0.4, 0.0, 0.6, 1);
}

.note .icon {
	width: 10%;
	height: 100%;
	float: left;
}

.note .icon .i {
	font-size: 2em;
}

.note .text {
	width: 90%;
	height: 100%;
	float: left;
}

.note.open {
	transition: 200ms all cubic-bezier(0.0, 0.0, 0.2, 1);
	top: 1vh;
}

.note #noteContent {
	position: relative;
	width: 90%;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
}

.inputCard {
	position: fixed;
	z-index: 9;
	width: 50vw;
	height: 50vh;
	top: 101vh;
	left: 25vw;
	background-color: white;
	transition: all cubic-bezier(0.4, 0.0, 1, 1) 200ms;
}

.inputCard.peek {
	top: 95vh;
	transition: all cubic-bezier(0.0, 0.0, 0.2, 1) 250ms;
}

.inputCard.open {
	top: 50vh;
	transition: all cubic-bezier(0.0, 0.0, 0.2, 1) 250ms;
}

.inputCard.open .arrow img {
	transform: translate(-50%,-50%) rotate(180deg) !important;
	transition: all cubic-bezier(0.0, 0.0, 0.2, 1) 250ms;
}

.inputCard .shared {
	height: 5vh;
	width: 100%;
	overflow-y: hidden;
}

.inputCard .shared .arrow {
	width: 10%;
	height: 100%;
	float: left;
}

.inputCard .shared .arrow img {
	height: 70%;
	position: relative;
	top: 50%;
	left: 50%;
	cursor: pointer;
	transform: translate(-50%, -50%);
}

.inputCard .shared .slidingTitle {
	width: 90%;
	height: 100%;
	float: left;
}

.inputCard .shared .sliding {
	width: 100%;
	height: 15vh;
	position: relative;
	top: -5vh;
}

.inputCard .shared .sliding.up {
	top: 0vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 200ms;
}

.inputCard .shared .sliding.down {
	top: -10vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 200ms;
}

.inputCard .shared .sliding h1 {
	width: 100%;
	height: 5vh;
	font-weight: 100;
}

.inputCard .contentWrapper {
	padding: 1%;
	height: calc(50vh - 15%);
	overflow-y: auto;
}

.inputCard .content {
	width: 98%;
	height: 98%;
}

.inputCard .content.open {
	opacity: 1;
}

.inputCard .content.fadeOutDown {
	margin-top: -2vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 100ms;
	opacity: 0;
}

.inputCard .newContent.enterDown {
	margin-top: 2vh;
	opacity: 0;
}

.inputCard .newContent.enterDown.fadeInDown {
	margin-top: 0vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 100ms;
	opacity: 1;
}

.inputCard .content.fadeOutUp {
	margin-top: 2vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 100ms;
	opacity: 0;
}

.inputCard .newContent.enterUp {
	z-index: 2;
	margin-top: -2vh;
	opacity: 0;
}

.inputCard .newContent.enterUp.fadeInUp {
	margin-top: 0vh;
	transition: all cubic-bezier(0.4, 0.0, 0.2, 1) 100ms;
	opacity: 1;
}
